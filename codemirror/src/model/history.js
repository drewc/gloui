import{cmp,copyPos}from"../line/pos.js";import{stretchSpansOverChange}from"../line/spans.js";import{getBetween}from"../line/utils_line.js";import{signal}from"../util/event.js";import{indexOf,lst}from"../util/misc.js";import{changeEnd}from"./change_measurement.js";import{linkedDocs}from"./document_data.js";import{Selection}from"./selection.js";export function History(e){this.done=[],this.undone=[],this.undoDepth=1/0,this.lastModTime=this.lastSelTime=0,this.lastOp=this.lastSelOp=null,this.lastOrigin=this.lastSelOrigin=null,this.generation=this.maxGeneration=e||1}export function historyChangeFromChange(e,t){let n={from:copyPos(t.from),to:changeEnd(t),text:getBetween(e,t.from,t.to)};return attachLocalSpans(e,n,t.from.line,t.to.line+1),linkedDocs(e,(e=>attachLocalSpans(e,n,t.from.line,t.to.line+1)),!0),n}function clearSelectionEvents(e){while(e.length){let t=lst(e);if(!t.ranges)break;e.pop()}}function lastChangeEvent(e,t){return t?(clearSelectionEvents(e.done),lst(e.done)):e.done.length&&!lst(e.done).ranges?lst(e.done):e.done.length>1&&!e.done[e.done.length-2].ranges?(e.done.pop(),lst(e.done)):void 0}export function addChangeToHistory(e,t,n,o){let l=e.history;l.undone.length=0;let i,s,r=+new Date;if((l.lastOp==o||l.lastOrigin==t.origin&&t.origin&&("+"==t.origin.charAt(0)&&l.lastModTime>r-(e.cm?e.cm.options.historyEventDelay:500)||"*"==t.origin.charAt(0)))&&(i=lastChangeEvent(l,l.lastOp==o)))s=lst(i.changes),0==cmp(t.from,t.to)&&0==cmp(t.from,s.to)?s.to=changeEnd(t):i.changes.push(historyChangeFromChange(e,t));else{let n=lst(l.done);n&&n.ranges||pushSelectionToHistory(e.sel,l.done),i={changes:[historyChangeFromChange(e,t)],generation:l.generation},l.done.push(i);while(l.done.length>l.undoDepth)l.done.shift(),l.done[0].ranges||l.done.shift()}l.done.push(n),l.generation=++l.maxGeneration,l.lastModTime=l.lastSelTime=r,l.lastOp=l.lastSelOp=o,l.lastOrigin=l.lastSelOrigin=t.origin,s||signal(e,"historyAdded")}function selectionEventCanBeMerged(e,t,n,o){let l=t.charAt(0);return"*"==l||"+"==l&&n.ranges.length==o.ranges.length&&n.somethingSelected()==o.somethingSelected()&&new Date-e.history.lastSelTime<=(e.cm?e.cm.options.historyEventDelay:500)}export function addSelectionToHistory(e,t,n,o){let l=e.history,i=o&&o.origin;n==l.lastSelOp||i&&l.lastSelOrigin==i&&(l.lastModTime==l.lastSelTime&&l.lastOrigin==i||selectionEventCanBeMerged(e,i,lst(l.done),t))?l.done[l.done.length-1]=t:pushSelectionToHistory(t,l.done),l.lastSelTime=+new Date,l.lastSelOrigin=i,l.lastSelOp=n,o&&!1!==o.clearRedo&&clearSelectionEvents(l.undone)}export function pushSelectionToHistory(e,t){let n=lst(t);n&&n.ranges&&n.equals(e)||t.push(e)}function attachLocalSpans(e,t,n,o){let l=t["spans_"+e.id],i=0;e.iter(Math.max(e.first,n),Math.min(e.first+e.size,o),(n=>{n.markedSpans&&((l||(l=t["spans_"+e.id]={}))[i]=n.markedSpans),++i}))}function removeClearedSpans(e){if(!e)return null;let t;for(let n=0;n<e.length;++n)e[n].marker.explicitlyCleared?t||(t=e.slice(0,n)):t&&t.push(e[n]);return t?t.length?t:null:e}function getOldSpans(e,t){let n=t["spans_"+e.id];if(!n)return null;let o=[];for(let l=0;l<t.text.length;++l)o.push(removeClearedSpans(n[l]));return o}export function mergeOldSpans(e,t){let n=getOldSpans(e,t),o=stretchSpansOverChange(e,t);if(!n)return o;if(!o)return n;for(let l=0;l<n.length;++l){let e=n[l],t=o[l];if(e&&t)e:for(let n=0;n<t.length;++n){let o=t[n];for(let t=0;t<e.length;++t)if(e[t].marker==o.marker)continue e;e.push(o)}else t&&(n[l]=t)}return n}export function copyHistoryArray(e,t,n){let o=[];for(let i=0;i<e.length;++i){let s=e[i];if(s.ranges){o.push(n?Selection.prototype.deepCopy.call(s):s);continue}let r=s.changes,a=[];o.push({changes:a});for(let e=0;e<r.length;++e){let n,o=r[e];if(a.push({from:o.from,to:o.to,text:o.text}),t)for(var l in o)(n=l.match(/^spans_(\d+)$/))&&indexOf(t,Number(n[1]))>-1&&(lst(a)[l]=o[l],delete o[l])}}return o}