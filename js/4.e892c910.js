(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[4],{1236:function(t,e,s){"use strict";s.r(e);var a=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"flex"},[s("div",{staticClass:"q-pa-md q-gutter-sm",staticStyle:{width:"100%"}},[s("q-breadcrumbs",[s("q-breadcrumbs-el",{attrs:{icon:"home",to:"/"}}),s("q-breadcrumbs-el",{staticClass:"text-h5",attrs:{label:"Add Address",icon:"build"}})],1)],1),t.err?s("div",{staticClass:"q-pa-lg text-red"},[t._v("\n    "+t._s(t.err)+"\n  ")]):t._e(),t.newAddress?[s("q-card",{staticClass:"my-card",attrs:{flat:"",bordered:""}},[s("q-card-section",{attrs:{horizontal:""}},[s("q-card-section",{staticClass:"q-pt-xs"},[s("div",{staticClass:"text-overline"},[t._v("New Address Added!")]),s("div",{staticClass:"text-h5 q-mt-sm q-mb-xs"},[t._v(t._s(t.newAddress.label))]),s("div",{staticClass:"text-caption"},[t._v("\n            "+t._s(t.newAddress.number)+"\n            "),s("q-separator"),t._v("\n\n            You can now look at the rolodex with this address\n            "),t.newAddressContact?[t._v(", make a transfer")]:t._e(),t._v(", or\n            create another address.\n          ")],2)]),t.newAddressContact?s("q-card-section",{staticClass:"col-5 flex flex-center"},[s("q-card",{staticClass:"q-pa-lg"},[t._v("\n            Contact:\n          "),s("div",{staticClass:"text-h5 q-mt-sm q-mb-xs block"},[t._v(t._s(t.newAddressContact.name))]),s("div",{staticClass:"text-caption"},[t._v(" "+t._s(t.newAddressContact.description))])])],1):t._e()],1),s("q-separator"),s("q-card-actions",[s("q-btn",{attrs:{flat:"",color:"primary"},on:{click:t.addAnother}},[t._v("\n          Add Another Address\n        ")]),s("q-btn",{attrs:{flat:"",color:"primary",to:"/AddContact"}},[t._v("\n          Add a Contact\n        ")]),s("q-btn",{attrs:{flat:"",color:"primary",to:"/AssetTransfer"}},[t._v("\n          Transfer some Assets\n        ")])],1)],1)]:[s("div",{staticClass:"row"},[s("div",{staticClass:"col"},[s("q-card",{staticClass:"q-px-lg q-pb-lg block q-mx-md"},[s("q-input",{staticStyle:{"min-width":"15em"},attrs:{label:"Ethereum Address",hint:"The number in '0x...' format. Optional if providing a secret key"},model:{value:t.address.number,callback:function(e){t.$set(t.address,"number",e)},expression:"address.number"}}),s("q-input",{staticStyle:{"min-width":"15em"},attrs:{type:"password",label:"Secret",hint:"The secret key in '0x...' format. If provided will generate the number."},on:{blur:t.findNumber},model:{value:t.address.secret,callback:function(e){t.$set(t.address,"secret",e)},expression:"address.secret"}}),s("q-input",{attrs:{label:"Label",hint:"Optional, but recommended: A simple way to label it"},model:{value:t.address.label,callback:function(e){t.$set(t.address,"label",e)},expression:"address.label"}})],1)],1),s("div",{staticClass:"col"},[s("q-card",{staticClass:"q-px-lg q-pb-lg q-pt-lg block q-mx-md "},[s("contact-select",{model:{value:t.contact,callback:function(e){t.contact=e},expression:"contact"}}),t.contact?s("div",[t.contact.description?s("q-card-section",[s("small",{staticClass:"text-weight-thin"},[t._v(" Description:")]),t._v("\n            "+t._s(t.contact.description)+"\n          ")]):t._e()],1):t._e(),s("q-card-section",[s("div",{staticClass:"text-weight-light"},[t._v("Optional but recommended: The first contact\n            index in the Rolodex to be associated with this address ")])])],1)],1)]),s("div",{staticClass:"full-width text-center q-mt-md"},[t.address.number?s("q-btn",{attrs:{label:"Save Address"},on:{click:t.saveNewAddress}}):t._e()],1)]],2)},r=[],d=(s("371a"),s("14fa")),n=s("a4c0"),c=s("bc3a"),i=s.n(c),o={name:"AddAddress",components:{ContactSelect:d["a"]},data(){return{address:{},contact:{},err:!1,newAddress:null,newAddressContact:null}},methods:{isValid(){return!!this.address.number},findNumber(){const t=this.address.secret;if(t&&t.startsWith("0x"))return this.err=!1,console.log("finding number from",t),i.a.post($glowServer+"/eth/address-from-identity",{key:t}).then((t=>{const e=t.data;return this.address.number=e,this.$forceUpdate(),e})).catch((t=>{console.error("ERR!!",t,t.response),this.err=t.response.data}));t&&(this.err="Invalid 0x Hex: "+t)},saveNewAddress(){const t=this.address,e=this.contact;return t.id=randomUUID(),Object(n["saveAddress"])(t).then((()=>(e.id&&Object(n["saveAsset"])({owner:e.id,address:t.id}),this.newAddress=t,this.newAddressContact=e,this.contact={},this.address={},this.err=!1,t)))},addAnother(){this.newAddress=null,this.newAddressContact=null}}},l=o,m=s("2877"),b=s("ead5"),h=s("079e"),u=s("f09f"),p=s("a370"),v=s("eb85"),q=s("4b7e"),w=s("9c40"),A=s("27f9"),f=s("eebe"),C=s.n(f),x=Object(m["a"])(l,a,r,!1,null,null,null);e["default"]=x.exports;C()(x,"components",{QBreadcrumbs:b["a"],QBreadcrumbsEl:h["a"],QCard:u["a"],QCardSection:p["a"],QSeparator:v["a"],QCardActions:q["a"],QBtn:w["a"],QInput:A["a"]})}}]);